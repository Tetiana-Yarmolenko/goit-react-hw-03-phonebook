{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","INIITAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","form","onSubmit","label","input","text","placeholder","onChange","button","type","Component","ContactList","contacts","onRemove","list","map","item","onClick","Filter","filter","App","handleAddContact","newContact","handleCheckUnique","isExistContacts","find","contact","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContact","JSON","parse","prevProps","prevState","stringify","setItem","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fad5f3fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1K3CU\",\"label\":\"ContactForm_label__3HFGu\",\"input\":\"ContactForm_input__2sE1J\",\"button\":\"ContactForm_button__3BE1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__EPlMi\",\"item\":\"ContactList_item__148Tx\",\"button\":\"ContactList_button__BAxHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__149Sn\",\"input\":\"Filter_input__3l2dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3XtBu\"};","import s from './Container.module.css'\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>\r\n}\r\n\r\nexport default Container;","import { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport s from \"./ContactForm.module.css\"\r\n\r\n const INIITAL_STATE = {\r\n        name: '',\r\n        phone: '', \r\n}\r\n    \r\nclass ContactForm extends Component {\r\n   \r\n    state = INIITAL_STATE\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({[name]: value})\r\n    } \r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault()\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n\r\n        const isValidateForm = this.validateForm()\r\n        if (!isValidateForm) return\r\n        \r\n        onAdd({ id: uuid(), name, phone })\r\n        this.resetForm()\r\n}\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !phone) {\r\n            alert('Some field is empty')\r\n            return false\r\n        }\r\n        return onCheckUnique(name);\r\n    }\r\n\r\n    resetForm = () => this.setState(INIITAL_STATE)\r\n\r\n    render() {\r\n        const {name, phone} = this.state\r\n        return (<form className={s.form} onSubmit={this.handleFormSubmit}>\r\n            <label className={s.label}>\r\n                Name\r\n            <input\r\n                    className={s.input}\r\n                    text='text' name='name'\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.handleChangeForm} />\r\n            </label>\r\n            <label className={s.label}>\r\n                Phone\r\n            <input\r\n                    className={s.input}\r\n                    text='tel' name='phone'\r\n                    placeholder=\"Enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.handleChangeForm} />\r\n                </label>\r\n            <button className={s.button} type=\"submit\">Add contact</button>\r\n        </form>)\r\n    }\r\n}\r\n\r\nexport default  ContactForm","import React from 'react'\r\nimport s from './ContactList.module.css'\r\n\r\n// При використанні цього шаблону рендериться лише: (дані name, phone - не відображаються ).\r\n// Не можу зрозуміти, що не вірно роблю?\r\n\r\n// const ContactListItem = ({ id, name, phone, onRemove }) => {\r\n//     return (\r\n//         <li key={id} className={s.item}>\r\n//             {name}:{phone}\r\n//             <button className={s.button} type='button' onClick={()=>onRemove(id)}>Delete</button>\r\n//         </li>\r\n//     )\r\n    \r\n// }\r\n// const ContactList = ({ contacts, onRemove }) => {\r\n//     if (contacts.length === 0) return null\r\n//     return (\r\n//         <ul className={s.list}>\r\n//             {contacts.map(({ contact }) => (< ContactListItem {...contact} onRemove={onRemove}/>))}\r\n//         </ul>\r\n//     )\r\n// }\r\nfunction ContactList({ contacts, onRemove }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, phone, id }) => (\r\n        <li key={id} className={s.item}>\r\n          {name}: {phone}\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onRemove (id)}>\r\n            Delete\r\n          </button>\r\n        </li>))}\r\n    </ul>);\r\n}\r\n\r\nexport default ContactList","import s from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n         <label className={s.filter}>\r\n        Find contacts by name\r\n        <input\r\n        className={s.input}\r\n        type='text'\r\n        value={filter}\r\n        onChange={({target}) => onChange(target.value)}\r\n        placeholder='Enter name for Search'/>\r\n        </label>)\r\n}\r\nexport default Filter","import { Component } from 'react';\n\nimport './App.css';\n\nimport Container from './Container/Container'\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\n    ],\n    filter: '',\n     name: '',\n     phone: '',\n  }\n\n// контакти, якщо такі є, зчитуються з локального сховища і записуються в стан.\n \n  componentDidMount() {\n    const contact = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contact);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact })\n    }\n  }\n\n  // При додаванні і видаленні контакту, контакти зберігаються в локальне сховище.\n \n  componentDidUpdate(prevProps, prevState,) {\n    const contact = JSON.stringify(this.state.contacts);\n    \n    if (this.state.contacts !== prevState.contacts ) {\n      localStorage.setItem('contact', contact);\n    }\n  }\n\n  handleAddContact = (newContact) => this.setState(({ contacts }) => ({\n    contacts: [...contacts, newContact],\n  })) \n\n  handleCheckUnique = (name) => {\n    const { contacts } = this.state;\n    const isExistContacts = !!contacts.find((contact) => contact.name === name)\n\n    isExistContacts && alert('Contacts is already exist')\n\n    return !isExistContacts\n  }\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) =>({ contacts: contacts.filter((contact) => contact.id !== id) }))\n  \n  handleFilterChange = (filter) => this.setState({filter})\n  \n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()) )\n  }\n\n  render() {\n    const { contacts, filter } = this.state\n    const visibleContacts = this.getVisibleContacts()\n    return ( <Container>\n      <h1 className='phonebook'>Phonebook</h1>\n      <ContactForm contacts={contacts}  onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUnique} />\n      <h2 className='contacts'>Contacts</h2>\n      < Filter filter ={filter} onChange={this.handleFilterChange} />\n      <ContactList contacts ={visibleContacts} onRemove={this.handleRemoveContact} />\n    </Container>)\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}